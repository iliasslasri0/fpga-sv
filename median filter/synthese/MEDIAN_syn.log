
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+40 (git sha1 449e3dbbd, clang 14.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv
Parsing SystemVerilog input from `/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv' to AST representation.
Generating RTLIL representation for module `\MED'.
Warning: Replacing memory \R with list of registers. See /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:17
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MCE.sv
Parsing SystemVerilog input from `/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MCE.sv' to AST representation.
Generating RTLIL representation for module `\MCE'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv
Parsing SystemVerilog input from `/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv' to AST representation.
Generating RTLIL representation for module `\MEDIAN'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     \MED
Used module:         \MCE
Parameter \TAILLE = 8

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\MCE'.
Parameter \TAILLE = 8
Generating RTLIL representation for module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.
Reprocessing module MED because instantiated module MCE has become available.
Generating RTLIL representation for module `\MED'.
Warning: Replacing memory \R with list of registers. See /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:17
Parameter \TAILLE = 8
Parameter \NMBR = 9

4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\MED'.
Parameter \TAILLE = 8
Parameter \NMBR = 9
Generating RTLIL representation for module `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED'.
Warning: Replacing memory \R with list of registers. See /cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:17

4.4. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         \MCE
Parameter \TAILLE = 8
Found cached RTLIL representation for module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.

4.5. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000

4.6. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000
Removing unused module `\MED'.
Removing unused module `\MCE'.
Removed 2 unused modules.

5. Executing PREP pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000

5.1.2. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 7 switch rules as full_case in process $proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23 in module MEDIAN.
Marked 2 switch rules as full_case in process $proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10 in module MEDIAN.
Marked 2 switch rules as full_case in process $proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53 in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Removed a total of 0 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 11 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~18 debug messages>

5.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23'.
     1/12: $6\DSO[0:0]
     2/12: $6\my_BYP[0:0]
     3/12: $5\DSO[0:0]
     4/12: $5\my_BYP[0:0]
     5/12: $4\DSO[0:0]
     6/12: $4\my_BYP[0:0]
     7/12: $3\DSO[0:0]
     8/12: $3\my_BYP[0:0]
     9/12: $2\DSO[0:0]
    10/12: $2\my_BYP[0:0]
    11/12: $1\DSO[0:0]
    12/12: $1\my_BYP[0:0]
Creating decoders for process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10'.
     1/2: $0\counter[3:0]
     2/2: $0\state[3:0]
Creating decoders for process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:0$55'.
Creating decoders for process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
     1/2: $0\R[8][7:0]
     2/2: $0\R[0][7:0]

5.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\MEDIAN.\DSO' from process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23'.
No latch inferred for signal `\MEDIAN.\my_BYP' from process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23'.
No latch inferred for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\DO' from process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:0$55'.

5.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\MEDIAN.\state' using process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10'.
  created $dff cell `$procdff$210' with positive edge clock.
Creating register for signal `\MEDIAN.\counter' using process `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10'.
  created $dff cell `$procdff$211' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$fordecl_block$1.i' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$212' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[0]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$213' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[1]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$214' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[2]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$215' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[3]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$216' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[4]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$217' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[5]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$218' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[6]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$219' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[7]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$220' with positive edge clock.
Creating register for signal `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.\R[8]' using process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
  created $dff cell `$procdff$221' with positive edge clock.

5.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 7 empty switches in `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23'.
Removing empty process `MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:0$23'.
Found and cleaned up 9 empty switches in `\MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10'.
Removing empty process `MEDIAN.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:17$10'.
Removing empty process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:0$55'.
Found and cleaned up 2 empty switches in `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
Removing empty process `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.$proc$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MED.sv:14$53'.
Cleaned up 18 empty switches.

5.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~4 debug messages>
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.

5.3. Executing FUTURE pass.

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Finding unused cells or wires in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
Finding unused cells or wires in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
Removed 2 unused cells and 85 unused wires.
<suppressed ~5 debug messages>

5.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED...
Checking module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000...
Checking module MEDIAN...
Found and reported 0 problems.

5.7. Executing OPT pass (performing simple optimizations).

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
Optimizing module MEDIAN.

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED'.
Finding identical cells in module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.
<suppressed ~3 debug messages>
Finding identical cells in module `\MEDIAN'.
<suppressed ~48 debug messages>
Removed a total of 17 cells.

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$102.
    dead port 1/2 on $mux $procmux$108.
    dead port 1/2 on $mux $procmux$111.
    dead port 1/2 on $mux $procmux$114.
    dead port 1/2 on $mux $procmux$120.
    dead port 1/2 on $mux $procmux$123.
    dead port 1/2 on $mux $procmux$126.
    dead port 1/2 on $mux $procmux$132.
    dead port 1/2 on $mux $procmux$135.
    dead port 1/2 on $mux $procmux$141.
    dead port 1/2 on $mux $procmux$144.
    dead port 1/2 on $mux $procmux$150.
    dead port 1/2 on $mux $procmux$156.
    dead port 1/2 on $mux $procmux$60.
    dead port 1/2 on $mux $procmux$63.
    dead port 1/2 on $mux $procmux$66.
    dead port 1/2 on $mux $procmux$69.
    dead port 1/2 on $mux $procmux$72.
    dead port 1/2 on $mux $procmux$78.
    dead port 1/2 on $mux $procmux$81.
    dead port 1/2 on $mux $procmux$84.
    dead port 1/2 on $mux $procmux$87.
    dead port 1/2 on $mux $procmux$93.
    dead port 1/2 on $mux $procmux$96.
    dead port 1/2 on $mux $procmux$99.
Removed 25 multiplexer ports.
<suppressed ~9 debug messages>

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
  Optimizing cells in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED'.
Finding identical cells in module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.
Finding identical cells in module `\MEDIAN'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
Finding unused cells or wires in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 43 unused wires.
<suppressed ~2 debug messages>

5.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
Optimizing module MEDIAN.

5.7.8. Rerunning OPT passes. (Maybe there is more to do..)

5.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

5.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
  Optimizing cells in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

5.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED'.
Finding identical cells in module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

5.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
Finding unused cells or wires in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \MEDIAN..

5.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
Optimizing module MEDIAN.

5.7.14. Finished OPT passes. (There is nothing left to do.)

5.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from mux cell MEDIAN.$ternary$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:19$12 ($mux).
Removed top 31 bits (of 32) from port B of cell MEDIAN.$add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14 ($add).
Removed top 28 bits (of 32) from port Y of cell MEDIAN.$add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14 ($add).
Removed top 3 bits (of 4) from mux cell MEDIAN.$ternary$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:32$15 ($mux).
Removed top 1 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:47$18 ($eq).
Removed top 1 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:66$21 ($eq).
Removed top 3 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:81$24 ($eq).
Removed top 2 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:82$27 ($eq).
Removed top 2 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$30 ($eq).
Removed top 29 bits (of 32) from port B of cell MEDIAN.$ge$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$31 ($ge).
Removed top 1 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$33 ($eq).
Removed top 29 bits (of 32) from port B of cell MEDIAN.$gt$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$34 ($gt).
Removed top 1 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$36 ($eq).
Removed top 29 bits (of 32) from port B of cell MEDIAN.$gt$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$37 ($gt).
Removed top 1 bits (of 4) from port B of cell MEDIAN.$eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:86$39 ($eq).
Removed top 28 bits (of 32) from wire MEDIAN.$add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14_Y.
Removed top 2 bits (of 4) from wire MEDIAN.$ternary$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:19$12_Y.

5.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
Finding unused cells or wires in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.11. Executing OPT pass (performing simple optimizations).

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
Optimizing module MEDIAN.

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED'.
Finding identical cells in module `$paramod\MCE\TAILLE=s32'00000000000000000000000000001000'.
Finding identical cells in module `\MEDIAN'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED..
Finding unused cells or wires in module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.11.4. Finished fast OPT passes.

5.12. Printing statistics.

=== $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED ===

   Number of wires:                 18
   Number of wire bits:            123
   Number of public wires:          16
   Number of public wire bits:     107
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $dff                            9
     $mux                            2
     $paramod\MCE\TAILLE=s32'00000000000000000000000000001000      1

=== $paramod\MCE\TAILLE=s32'00000000000000000000000000001000 ===

   Number of wires:                  5
   Number of wire bits:             33
   Number of public wires:           4
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $gt                             1
     $mux                            2

=== MEDIAN ===

   Number of wires:                 53
   Number of wire bits:            118
   Number of public wires:           9
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     $add                            1
     $dff                            2
     $eq                             9
     $ge                             1
     $gt                             2
     $logic_and                      6
     $logic_not                      1
     $mux                           24
     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED      1
     $pmux                           2

=== design hierarchy ===

   MEDIAN                            1
     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED      1
       $paramod\MCE\TAILLE=s32'00000000000000000000000000001000      1

   Number of wires:                 76
   Number of wire bits:            274
   Number of public wires:          29
   Number of public wire bits:     168
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 62
     $add                            1
     $dff                           11
     $eq                             9
     $ge                             1
     $gt                             3
     $logic_and                      6
     $logic_not                      1
     $mux                           28
     $pmux                           2

5.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED...
Checking module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000...
Checking module MEDIAN...
Found and reported 0 problems.

6. Executing JSON backend.

7. Executing SYNTH_INTEL_ALM pass.

7.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/cyclonev/cells_sim.v
Parsing SystemVerilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/cyclonev/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\cyclonev_io_ibuf'.
Generating RTLIL representation for module `\cyclonev_io_obuf'.
Generating RTLIL representation for module `\cyclonev_lcell_comb'.
Generating RTLIL representation for module `\dffeas'.
Successfully finished Verilog frontend.

7.2. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/alm_sim.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/alm_sim.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_ALUT6'.
Generating RTLIL representation for module `\MISTRAL_ALUT5'.
Generating RTLIL representation for module `\MISTRAL_ALUT4'.
Generating RTLIL representation for module `\MISTRAL_ALUT3'.
Generating RTLIL representation for module `\MISTRAL_ALUT2'.
Generating RTLIL representation for module `\MISTRAL_NOT'.
Generating RTLIL representation for module `\MISTRAL_ALUT_ARITH'.
Successfully finished Verilog frontend.

7.3. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_FF'.
Successfully finished Verilog frontend.

7.4. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dsp_sim.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_MUL27X27'.
Generating RTLIL representation for module `\MISTRAL_MUL18X18'.
Generating RTLIL representation for module `\MISTRAL_MUL9X9'.
Successfully finished Verilog frontend.

7.5. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_MLAB'.
Generating RTLIL representation for module `\MISTRAL_M10K'.
Successfully finished Verilog frontend.

7.6. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/misc_sim.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/misc_sim.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_IB'.
Generating RTLIL representation for module `\MISTRAL_OB'.
Generating RTLIL representation for module `\MISTRAL_IO'.
Generating RTLIL representation for module `\MISTRAL_CLKBUF'.
Successfully finished Verilog frontend.

7.7. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_model.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__MISTRAL_FF_SYNCONLY'.
Successfully finished Verilog frontend.

7.8. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel/common/altpll_bb.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel/common/altpll_bb.v' to AST representation.
Successfully finished Verilog frontend.

7.9. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/megafunction_bb.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/megafunction_bb.v' to AST representation.
Generating RTLIL representation for module `\altera_pll'.
Generating RTLIL representation for module `\altera_std_synchronizer'.
Generating RTLIL representation for module `\altddio_in'.
Generating RTLIL representation for module `\altddio_out'.
Generating RTLIL representation for module `\altddio_bidir'.
Generating RTLIL representation for module `\altiobuf_in'.
Generating RTLIL representation for module `\altiobuf_out'.
Generating RTLIL representation for module `\altiobuf_bidir'.
Generating RTLIL representation for module `\altsyncram'.
Generating RTLIL representation for module `\cyclonev_mlab_cell'.
Generating RTLIL representation for module `\cyclonev_mac'.
Generating RTLIL representation for module `\cyclone10gx_mac'.
Generating RTLIL representation for module `\cyclonev_ram_block'.
Generating RTLIL representation for module `\cyclone10gx_io_ibuf'.
Generating RTLIL representation for module `\cyclone10gx_io_obuf'.
Generating RTLIL representation for module `\cyclonev_clkena'.
Generating RTLIL representation for module `\cyclone10gx_clkena'.
Generating RTLIL representation for module `\cyclonev_oscillator'.
Generating RTLIL representation for module `\cyclonev_hps_interface_mpu_general_purpose'.
Successfully finished Verilog frontend.

7.10. Executing HIERARCHY pass (managing design hierarchy).

7.10.1. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000

7.10.2. Analyzing design hierarchy..
Top module:  \MEDIAN
Used module:     $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED
Used module:         $paramod\MCE\TAILLE=s32'00000000000000000000000000001000
Removed 0 unused modules.

7.11. Executing PROC pass (convert processes to netlists).

7.11.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.11.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315 in module MISTRAL_MLAB.
Marked 3 switch rules as full_case in process $proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288 in module MISTRAL_FF.
Removed a total of 0 dead cases.

7.11.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 7 assignments to connections.

7.11.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:57$335'.
  Set init value: \mem = 0
Found init rule in `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:0$290'.
  Set init value: \Q = 1'0

7.11.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \ACLR in `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288'.

7.11.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~4 debug messages>

7.11.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:57$335'.
Creating decoders for process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
     1/4: $1$lookahead\mem$314[31:0]$323
     2/4: $1$bitselwrite$data$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$312[31:0]$321
     3/4: $1$bitselwrite$mask$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$311[31:0]$320
     4/4: $1$bitselwrite$sel$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$313[4:0]$322
Creating decoders for process `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:0$290'.
Creating decoders for process `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288'.
     1/1: $0\Q[0:0]

7.11.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.11.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\MISTRAL_MLAB.\mem' using process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
  created $dff cell `$procdff$359' with positive edge clock.
Creating register for signal `\MISTRAL_MLAB.$bitselwrite$mask$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$311' using process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
  created $dff cell `$procdff$360' with positive edge clock.
Creating register for signal `\MISTRAL_MLAB.$bitselwrite$data$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$312' using process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
  created $dff cell `$procdff$361' with positive edge clock.
Creating register for signal `\MISTRAL_MLAB.$bitselwrite$sel$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:101$313' using process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
  created $dff cell `$procdff$362' with positive edge clock.
Creating register for signal `\MISTRAL_MLAB.$lookahead\mem$314' using process `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
  created $dff cell `$procdff$363' with positive edge clock.
Creating register for signal `\MISTRAL_FF.\Q' using process `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288'.
  created $adff cell `$procdff$364' with positive edge clock and negative level reset.

7.11.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.11.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:57$335'.
Found and cleaned up 1 empty switch in `\MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
Removing empty process `MISTRAL_MLAB.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/mem_sim.v:100$315'.
Removing empty process `MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:0$290'.
Found and cleaned up 3 empty switches in `\MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288'.
Removing empty process `MISTRAL_FF.$proc$/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_sim.v:118$288'.
Cleaned up 4 empty switches.

7.11.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Optimizing module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
Optimizing module MEDIAN.

7.12. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$35b6c50ff1da35637c32669d8c299c654663931a\MED.
Deleting now unused module $paramod\MCE\TAILLE=s32'00000000000000000000000000001000.
<suppressed ~2 debug messages>

7.13. Executing TRIBUF pass.

7.14. Executing DEMINOUT pass (demote inout ports to input or output).

7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.17. Executing CHECK pass (checking for obvious problems).
Checking module MEDIAN...
Found and reported 0 problems.

7.18. Executing OPT pass (performing simple optimizations).

7.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

7.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.18.6. Executing OPT_DFF pass (perform DFF optimizations).

7.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.18.9. Finished OPT passes. (There is nothing left to do.)

7.19. Executing FSM pass (extract and optimize FSM).

7.19.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register MEDIAN.state.

7.19.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\MEDIAN'.
  found $dff cell for state register: $procdff$210
  root of input selection tree: $0\state[3:0]
  found ctrl input: \nRST
  found ctrl input: \DSI
  found state code: 4'0000
  found state code: 4'0010
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:86$39_Y
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$36_Y
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$33_Y
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$30_Y
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:82$27_Y
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:81$24_Y
  found ctrl input: $procmux$177_CMP
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:66$21_Y
  found state code: 4'0001
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:24$13_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:47$18_Y
  found state code: 4'0100
  found state code: 4'0011
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:81$24_Y
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:82$27_Y
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$30_Y
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$33_Y
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$36_Y
  found ctrl output: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:86$39_Y
  found ctrl output: $procmux$177_CMP
  ctrl inputs: { $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:66$21_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:47$18_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:24$13_Y \nRST \DSI }
  ctrl outputs: { $procmux$177_CMP $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:86$39_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$36_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$33_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$30_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:82$27_Y $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:81$24_Y $0\state[3:0] }
  transition:     4'0000 5'---00 ->     4'0000 11'10000000000
  transition:     4'0000 5'---01 ->     4'0010 11'10000000010
  transition:     4'0000 5'---10 ->     4'0000 11'10000000000
  transition:     4'0000 5'---11 ->     4'0001 11'10000000001
  transition:     4'0100 5'---00 ->     4'0000 11'00010000000
  transition:     4'0100 5'---01 ->     4'0010 11'00010000010
  transition:     4'0100 5'--01- ->     4'0100 11'00010000100
  transition:     4'0100 5'--11- ->     4'0101 11'00010000101
  transition:     4'0010 5'---00 ->     4'0000 11'00000100000
  transition:     4'0010 5'---01 ->     4'0010 11'00000100010
  transition:     4'0010 5'--01- ->     4'0010 11'00000100010
  transition:     4'0010 5'--11- ->     4'0011 11'00000100011
  transition:     4'0110 5'---00 ->     4'0000 11'01000000000
  transition:     4'0110 5'---01 ->     4'0010 11'01000000010
  transition:     4'0110 5'0--1- ->     4'0110 11'01000000110
  transition:     4'0110 5'1--10 ->     4'0000 11'01000000000
  transition:     4'0110 5'1--11 ->     4'0001 11'01000000001
  transition:     4'0001 5'---00 ->     4'0000 11'00000010000
  transition:     4'0001 5'---01 ->     4'0010 11'00000010010
  transition:     4'0001 5'--01- ->     4'0001 11'00000010001
  transition:     4'0001 5'--11- ->     4'0010 11'00000010010
  transition:     4'0101 5'---00 ->     4'0000 11'00100000000
  transition:     4'0101 5'---01 ->     4'0010 11'00100000010
  transition:     4'0101 5'--01- ->     4'0101 11'00100000101
  transition:     4'0101 5'--11- ->     4'0110 11'00100000110
  transition:     4'0011 5'---00 ->     4'0000 11'00001000000
  transition:     4'0011 5'---01 ->     4'0010 11'00001000010
  transition:     4'0011 5'-0-1- ->     4'0011 11'00001000011
  transition:     4'0011 5'-1-1- ->     4'0100 11'00001000100

7.19.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$365' from module `\MEDIAN'.
  Merging pattern 5'---00 and 5'---10 from group (0 0 11'10000000000).
  Merging pattern 5'---10 and 5'---00 from group (0 0 11'10000000000).

7.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 17 unused cells and 17 unused wires.
<suppressed ~18 debug messages>

7.19.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$365' from module `\MEDIAN'.
  Removing unused output signal $0\state[3:0] [0].
  Removing unused output signal $0\state[3:0] [1].
  Removing unused output signal $0\state[3:0] [2].
  Removing unused output signal $0\state[3:0] [3].

7.19.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$365' from module `\MEDIAN' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------1
  0100 -> -----1-
  0010 -> ----1--
  0110 -> ---1---
  0001 -> --1----
  0101 -> -1-----
  0011 -> 1------

7.19.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$365' from module `MEDIAN':
-------------------------------------

  Information on FSM $fsm$\state$365 (\state):

  Number of input signals:    5
  Number of output signals:   7
  Number of state bits:       7

  Input signals:
    0: \DSI
    1: \nRST
    2: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:24$13_Y
    3: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:47$18_Y
    4: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:66$21_Y

  Output signals:
    0: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:81$24_Y
    1: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:82$27_Y
    2: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:83$30_Y
    3: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:84$33_Y
    4: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:85$36_Y
    5: $eq$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:86$39_Y
    6: $procmux$177_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'----0   ->     0 7'1000000
      1:     0 5'---01   ->     2 7'1000000
      2:     0 5'---11   ->     4 7'1000000
      3:     1 5'---00   ->     0 7'0001000
      4:     1 5'--01-   ->     1 7'0001000
      5:     1 5'---01   ->     2 7'0001000
      6:     1 5'--11-   ->     5 7'0001000
      7:     2 5'---00   ->     0 7'0000010
      8:     2 5'---01   ->     2 7'0000010
      9:     2 5'--01-   ->     2 7'0000010
     10:     2 5'--11-   ->     6 7'0000010
     11:     3 5'---00   ->     0 7'0100000
     12:     3 5'1--10   ->     0 7'0100000
     13:     3 5'---01   ->     2 7'0100000
     14:     3 5'0--1-   ->     3 7'0100000
     15:     3 5'1--11   ->     4 7'0100000
     16:     4 5'---00   ->     0 7'0000001
     17:     4 5'---01   ->     2 7'0000001
     18:     4 5'--11-   ->     2 7'0000001
     19:     4 5'--01-   ->     4 7'0000001
     20:     5 5'---00   ->     0 7'0010000
     21:     5 5'---01   ->     2 7'0010000
     22:     5 5'--11-   ->     3 7'0010000
     23:     5 5'--01-   ->     5 7'0010000
     24:     6 5'---00   ->     0 7'0000100
     25:     6 5'-1-1-   ->     1 7'0000100
     26:     6 5'---01   ->     2 7'0000100
     27:     6 5'-0-1-   ->     6 7'0000100

-------------------------------------

7.19.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$365' from module `\MEDIAN'.

7.20. Executing OPT pass (performing simple optimizations).

7.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~2 debug messages>

7.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

7.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.20.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$211 ($dff) from module MEDIAN (D = $procmux$172_Y, Q = \counter, rval = 4'0000).
Adding EN signal on $flatten\med0.$procdff$221 ($dff) from module MEDIAN (D = $flatten\med0.$0\R[8][7:0], Q = \med0.R[8]).

7.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 1 unused cells and 17 unused wires.
<suppressed ~2 debug messages>

7.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~1 debug messages>

7.20.9. Rerunning OPT passes. (Maybe there is more to do..)

7.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.20.13. Executing OPT_DFF pass (perform DFF optimizations).

7.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.20.16. Finished OPT passes. (There is nothing left to do.)

7.21. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell MEDIAN.$auto$fsm_map.cc:77:implement_pattern_cache$414 ($eq).
Removed top 1 bits (of 2) from port B of cell MEDIAN.$auto$fsm_map.cc:77:implement_pattern_cache$399 ($eq).
Removed top 1 bits (of 2) from port B of cell MEDIAN.$auto$fsm_map.cc:77:implement_pattern_cache$432 ($eq).
Removed top 1 bits (of 2) from port B of cell MEDIAN.$auto$fsm_map.cc:77:implement_pattern_cache$445 ($eq).

7.22. Executing PEEPOPT pass (run peephole optimizers).

7.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.24. Executing SHARE pass (SAT-based resource sharing).

7.25. Executing TECHMAP pass (map to technology primitives).

7.25.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.25.2. Continuing TECHMAP pass.
Using template $paramod$064b0df8ce6acf910681ecbaa4174ca130832c6e\_90_lut_cmp_ for cells of type $ge.
Using template $paramod$abca06f7a4f4190bddfee5f4545aa47595d1f4e6\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$fc417d2e8c11f8fd0321206ae65056a1f93d1c72\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~126 debug messages>

7.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

7.28. Executing TECHMAP pass (map to technology primitives).

7.28.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.28.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.29. Executing TECHMAP pass (map to technology primitives).

7.29.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.30. Executing TECHMAP pass (map to technology primitives).

7.30.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.30.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.31. Executing TECHMAP pass (map to technology primitives).

7.31.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.32. Executing TECHMAP pass (map to technology primitives).

7.32.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.32.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.33. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module MEDIAN:
  creating $macc model for $add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14 ($add).
  creating $alu model for $macc $add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14.
  creating $alu model for $flatten\med0.\mce0.$gt$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MCE.sv:6$42 ($gt): new $alu
  creating $alu cell for $flatten\med0.\mce0.$gt$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MCE.sv:6$42: $auto$alumacc.cc:485:replace_alu$461
  creating $alu cell for $add$/cal/exterieurs/lasri-22/Desktop/iliass-lasri/median/synthese/../src/MEDIAN.sv:27$14: $auto$alumacc.cc:485:replace_alu$466
  created 2 $alu and 0 $macc cells.

7.34. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port MEDIAN.CLK using MISTRAL_IB.
Mapping port MEDIAN.DI using MISTRAL_IB.
Mapping port MEDIAN.DO using MISTRAL_OB.
Mapping port MEDIAN.DSI using MISTRAL_IB.
Mapping port MEDIAN.DSO using MISTRAL_OB.
Mapping port MEDIAN.nRST using MISTRAL_IB.

7.35. Executing TECHMAP pass (map to technology primitives).

7.35.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/arith_alm_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/arith_alm_map.v' to AST representation.
Generating RTLIL representation for module `\$alu'.
Successfully finished Verilog frontend.

7.35.2. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dsp_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\__MUL27X27'.
Generating RTLIL representation for module `\__MUL18X18'.
Generating RTLIL representation for module `\__MUL9X9'.
Successfully finished Verilog frontend.

7.35.3. Continuing TECHMAP pass.
Using template $paramod$09c2da2fd80113fcc7c84f56882b37fd4f3eecea\$alu for cells of type $alu.
Using template $paramod$4d390c14c7ada643e28c1b1603603b46cb2755a8\$alu for cells of type $alu.
No more expansions possible.
<suppressed ~54 debug messages>

7.36. Executing OPT pass (performing simple optimizations).

7.36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~22 debug messages>

7.36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.36.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.36.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.36.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.36.6. Executing OPT_DFF pass (perform DFF optimizations).

7.36.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 54 unused cells and 107 unused wires.
<suppressed ~58 debug messages>

7.36.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.36.9. Rerunning OPT passes. (Maybe there is more to do..)

7.36.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.36.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.36.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.36.13. Executing OPT_DFF pass (perform DFF optimizations).

7.36.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.36.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.36.16. Finished OPT passes. (There is nothing left to do.)

7.37. Executing MEMORY pass.

7.37.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.37.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.37.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.37.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.37.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.37.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.37.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.37.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.37.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.37.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.39. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

7.40. Executing TECHMAP pass (map to technology primitives).

7.40.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/bram_m10k_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/bram_m10k_map.v' to AST representation.
Generating RTLIL representation for module `\$__MISTRAL_M10K'.
Successfully finished Verilog frontend.

7.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

7.41. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

7.42. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.43. Executing OPT pass (performing simple optimizations).

7.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~9 debug messages>

7.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.43.6. Executing OPT_SHARE pass.

7.43.7. Executing OPT_DFF pass (perform DFF optimizations).

7.43.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.43.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.43.10. Rerunning OPT passes. (Maybe there is more to do..)

7.43.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.43.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.43.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.43.14. Executing OPT_SHARE pass.

7.43.15. Executing OPT_DFF pass (perform DFF optimizations).

7.43.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.43.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.43.18. Finished OPT passes. (There is nothing left to do.)

7.44. Executing TECHMAP pass (map to technology primitives).

7.44.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.44.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~175 debug messages>

7.45. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.46. Executing TECHMAP pass (map to technology primitives).

7.46.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/dff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Successfully finished Verilog frontend.

7.46.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
No more expansions possible.
<suppressed ~87 debug messages>

7.47. Executing OPT pass (performing simple optimizations).

7.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~93 debug messages>

7.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

7.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.47.6. Executing OPT_SHARE pass.

7.47.7. Executing OPT_DFF pass (perform DFF optimizations).

7.47.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 7 unused cells and 582 unused wires.
<suppressed ~8 debug messages>

7.47.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~5 debug messages>

7.47.10. Rerunning OPT passes. (Maybe there is more to do..)

7.47.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.47.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.47.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.47.14. Executing OPT_SHARE pass.

7.47.15. Executing OPT_DFF pass (perform DFF optimizations).

7.47.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.47.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.47.18. Rerunning OPT passes. (Maybe there is more to do..)

7.47.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.47.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.47.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.47.22. Executing OPT_SHARE pass.

7.47.23. Executing OPT_DFF pass (perform DFF optimizations).

7.47.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.47.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.47.26. Finished OPT passes. (There is nothing left to do.)
Removed 0 unused cells and 7 unused wires.

7.48. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting MISTRAL_CLKBUF on MEDIAN.med0.CLK[0].

7.49. Executing TECHMAP pass (map to technology primitives).

7.49.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_map.v' to AST representation.
Generating RTLIL representation for module `\MISTRAL_FF'.
Successfully finished Verilog frontend.

7.49.2. Continuing TECHMAP pass.
Using template $paramod\MISTRAL_FF\_TECHMAP_CONSTMSK_ACLR_=1'1 for cells of type MISTRAL_FF.
No more expansions possible.
<suppressed ~97 debug messages>

7.50. Executing ABC9 pass.

7.50.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module MEDIAN.
Found 0 SCCs.

7.50.4. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.5. Executing PROC pass (convert processes to netlists).

7.50.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.50.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.50.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.50.5.4. Executing PROC_INIT pass (extract init attributes).

7.50.5.5. Executing PROC_ARST pass (detect async resets in processes).

7.50.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.50.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.50.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.50.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.50.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.50.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.50.5.12. Executing OPT_EXPR pass (perform const folding).

7.50.6. Executing TECHMAP pass (map to technology primitives).

7.50.6.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.50.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~119 debug messages>

7.50.7. Executing OPT pass (performing simple optimizations).

7.50.7.1. Executing OPT_EXPR pass (perform const folding).

7.50.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.50.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

7.50.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

7.50.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.50.7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.50.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

7.50.7.8. Executing OPT_EXPR pass (perform const folding).

7.50.7.9. Finished OPT passes. (There is nothing left to do.)

7.50.8. Executing TECHMAP pass (map to technology primitives).

7.50.8.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

7.50.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

7.50.9. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

7.50.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

7.50.11. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

7.50.13. Executing TECHMAP pass (map to technology primitives).

7.50.13.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.50.13.2. Continuing TECHMAP pass.
Using template $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000 for cells of type $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000.
Using template $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011 for cells of type $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011.
Running "alumacc" on wrapper $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=1:A_WIDTH=2:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=1:A_WIDTH=2:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=1:A_WIDTH=2:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=2:A_WIDTH=1:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=2:A_WIDTH=1:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:Y_WIDTH=2:B_WIDTH=2:A_WIDTH=1:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:da78d05fe2a90a9c124545790c51474a3466d748$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'1
  Constant input on bit 8 of port A: 1'0
  Constant input on bit 9 of port A: 1'1
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'1
  Constant input on bit 12 of port A: 1'0
  Constant input on bit 13 of port A: 1'1
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'1
Creating constmapped module `$paramod$constmap:debecbbf3717e0f4c680abc85cfc533019b210d7$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr'.

7.50.13.12. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:debecbbf3717e0f4c680abc85cfc533019b210d7$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~501 debug messages>

7.50.13.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:debecbbf3717e0f4c680abc85cfc533019b210d7$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~149 debug messages>
Removed 0 unused cells and 12 unused wires.
Using template $paramod$constmap:debecbbf3717e0f4c680abc85cfc533019b210d7$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'0
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
  Constant input on bit 8 of port A: 1'1
  Constant input on bit 9 of port A: 1'1
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'0
  Constant input on bit 12 of port A: 1'0
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'1
  Constant input on bit 15 of port A: 1'1
Creating constmapped module `$paramod$constmap:56b8783ba577858eda421dc9a52b6c51029bfb42$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr'.

7.50.13.14. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:56b8783ba577858eda421dc9a52b6c51029bfb42$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.50.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:56b8783ba577858eda421dc9a52b6c51029bfb42$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~147 debug messages>
Removed 0 unused cells and 12 unused wires.
Using template $paramod$constmap:56b8783ba577858eda421dc9a52b6c51029bfb42$paramod$e31da3c1e7d1078ed1477dabeabe646dcd7d3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~180 debug messages>

7.50.14. Executing OPT pass (performing simple optimizations).

7.50.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~48 debug messages>

7.50.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

7.50.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.50.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.50.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.50.14.6. Executing OPT_DFF pass (perform DFF optimizations).

7.50.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 60 unused cells and 186 unused wires.
<suppressed ~61 debug messages>

7.50.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.
<suppressed ~1 debug messages>

7.50.14.9. Rerunning OPT passes. (Maybe there is more to do..)

7.50.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.50.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.50.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.50.14.13. Executing OPT_DFF pass (perform DFF optimizations).

7.50.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.50.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.50.14.16. Rerunning OPT passes. (Maybe there is more to do..)

7.50.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MEDIAN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.50.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MEDIAN.
Performed a total of 0 changes.

7.50.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.50.14.20. Executing OPT_DFF pass (perform DFF optimizations).

7.50.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..

7.50.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.50.14.23. Finished OPT passes. (There is nothing left to do.)

7.50.15. Executing AIGMAP pass (map logic to AIG).
Module MEDIAN: replaced 6 cells with 42 new cells, skipped 30 cells.
  replaced 2 cell types:
       5 $_XOR_
       1 $_MUX_
  not replaced 3 cell types:
      24 $specify2
       3 $_NOT_
       3 $_AND_

7.50.16. Executing AIGMAP pass (map logic to AIG).
Module MEDIAN: replaced 71 cells with 365 new cells, skipped 183 cells.
  replaced 3 cell types:
      44 $_OR_
       2 $_XOR_
      25 $_MUX_
  not replaced 8 cell types:
      21 $_NOT_
      45 $_AND_
       1 $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000
      11 MISTRAL_IB
       9 MISTRAL_OB
       1 MISTRAL_CLKBUF
      83 $__MISTRAL_FF_SYNCONLY
      12 $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011

7.50.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.50.16.3. Executing XAIGER backend.
<suppressed ~11 debug messages>
Extracted 170 AND gates and 594 wires from module `MEDIAN' to a netlist network with 115 inputs and 105 outputs.

7.50.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

7.50.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    115/    105  and =     160  lev =   10 (0.92)  mem = 0.01 MB  box = 13  bb = 0
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    115/    105  and =     189  lev =    7 (0.64)  mem = 0.01 MB  ch =   29  box = 13  bb = 0
ABC: + &if -W 600 -v 
ABC: K = 6. Memory (bytes): Truth =    0. Cut =   56. Obj =  136. Set =  600. CutMin = no
ABC: Node =     189.  Ch =    27.  Total mem =    0.07 MB. Peak cut mem =    0.01 MB.
ABC: P:  Del = 3060.00.  Ar =      69.0.  Edge =      202.  Cut =     2022.  T =     0.00 sec
ABC: P:  Del = 3060.00.  Ar =      48.0.  Edge =      169.  Cut =     1969.  T =     0.00 sec
ABC: P:  Del = 3060.00.  Ar =      33.0.  Edge =      145.  Cut =     2221.  T =     0.00 sec
ABC: F:  Del = 3060.00.  Ar =      31.0.  Edge =      141.  Cut =     1310.  T =     0.00 sec
ABC: A:  Del = 3060.00.  Ar =      31.0.  Edge =      132.  Cut =     1444.  T =     0.00 sec
ABC: A:  Del = 3060.00.  Ar =      31.0.  Edge =      132.  Cut =     1480.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: The network is not changed by "&mfs".
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    115/    105  and =     134  lev =    7 (0.64)  mem = 0.01 MB  box = 13  bb = 0
ABC: Mapping (K=6)  :  lut =     28  edge =     132  lev =    3 (0.22)  levB =   11  mem = 0.00 MB
ABC: LUT = 28 : 2=0 0.0 %  3=2 7.1 %  4=7 25.0 %  5=16 57.1 %  6=3 10.7 %  Ave = 4.71
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.04 seconds, total: 0.04 seconds

7.50.16.6. Executing AIGER frontend.
<suppressed ~452 debug messages>
Removed 221 unused cells and 566 unused wires.

7.50.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:       29
ABC RESULTS:   $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000 cells:        1
ABC RESULTS:   $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011 cells:       12
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       19
Removing temp directory.

7.50.17. Executing TECHMAP pass (map to technology primitives).

7.50.17.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

7.50.17.2. Continuing TECHMAP pass.
Using template $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000 for cells of type $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'0000000000000000.
Using template $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011 for cells of type $paramod\MISTRAL_ALUT_ARITH\LUT0=16'1010101010101010\LUT1=16'1100001111000011.
No more expansions possible.
<suppressed ~20 debug messages>

7.51. Executing TECHMAP pass (map to technology primitives).

7.51.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_unmap.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__MISTRAL_FF_SYNCONLY'.
Successfully finished Verilog frontend.

7.51.2. Continuing TECHMAP pass.
Using template \$__MISTRAL_FF_SYNCONLY for cells of type $__MISTRAL_FF_SYNCONLY.
No more expansions possible.
<suppressed ~86 debug messages>

7.52. Executing TECHMAP pass (map to technology primitives).

7.52.1. Executing Verilog-2005 frontend: /comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/alm_map.v
Parsing Verilog input from `/comelec/softs/opt/yosys/current/bin/../share/yosys/intel_alm/common/alm_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.52.2. Continuing TECHMAP pass.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$3bc38ad275bd75de1725d21b206ed03f1113228a\$lut for cells of type $lut.
Using template $paramod$1f53fee09ef57d4909616b1a035d2cfbaffed239\$lut for cells of type $lut.
Using template $paramod$20f82dd03802038bc013e5804609eaebb5d257db\$lut for cells of type $lut.
Using template $paramod$f24ba3ced4b870f8e829f5ac5a8af88573350e6f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod$2d5bc20486d975ad93935a66efca425d6df3f432\$lut for cells of type $lut.
Using template $paramod$61f394aff8ecaf5b4b914204e641871423faa3d6\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$72d04cda0ad63fcea17225ad4256bc664683b513\$lut for cells of type $lut.
Using template $paramod$5238f7d33e774e816570b8f153b6bfe0a0431256\$lut for cells of type $lut.
Using template $paramod$06e62c2045624c211a1abe4f2f36c8f22c688165\$lut for cells of type $lut.
Using template $paramod$d8994c8c0b12f74d74a0b113445c21c764bfd551\$lut for cells of type $lut.
Using template $paramod$c25c6a5fdbaaf7fd1ae672b0730620a506436b6b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$fd3ed3a223484aac184d1b7412ec4cfe4ca64c32\$lut for cells of type $lut.
Using template $paramod$493abbf044586c1007fc1027c17a896f4624122d\$lut for cells of type $lut.
Using template $paramod$ec8a72bb51191279ca376dbf3f8e262f50cb14bc\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$d4910f98bb725887fadfc256946077a4600b63bc\$lut for cells of type $lut.
Using template $paramod$dacd710f6a536c286b8b0cf03f52278433c173ba\$lut for cells of type $lut.
Using template $paramod$223d340dcd49dd829a2b17313522badb82b3a3d5\$lut for cells of type $lut.
Using template $paramod$b43cdd6ca89f8faa7ea02c4f2b202cefaf655ede\$lut for cells of type $lut.
Using template $paramod$a08c17db35e9908e74fd50f6adad73912e7b4f51\$lut for cells of type $lut.
Using template $paramod$eba7de026ff587370e320127e266317dae097a89\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$da8f92b800a26bd42885f31e44a76ec3b2ac24ed\$lut for cells of type $lut.
Using template $paramod$dd94059fcb77eeb0f907558ea0d112c2826edd53\$lut for cells of type $lut.
Using template $paramod$2c970cebff4ae8259fe9a69e8e8dee0796e0bac6\$lut for cells of type $lut.
Using template $paramod$2e37a29808ea9d028852cbc67bbcbc7bc127b77a\$lut for cells of type $lut.
Using template $paramod$2978a73989be3e1278af72b9db666c30fa0ff85b\$lut for cells of type $lut.
Using template $paramod$c2d88359173224725f8c36b669c6ec7065add009\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$24f8f1e7edc03ec1956ceeb1e873ad0c90a0dcd1\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~481 debug messages>

7.53. Executing OPT pass (performing simple optimizations).

7.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MEDIAN.

7.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MEDIAN'.
Removed a total of 0 cells.

7.53.3. Executing OPT_DFF pass (perform DFF optimizations).

7.53.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MEDIAN..
Removed 7 unused cells and 2023 unused wires.
<suppressed ~10 debug messages>

7.53.5. Finished fast OPT passes.

7.54. Executing AUTONAME pass.
Renamed 1031 objects in module MEDIAN (43 iterations).
<suppressed ~184 debug messages>

7.55. Executing HIERARCHY pass (managing design hierarchy).

7.55.1. Analyzing design hierarchy..
Top module:  \MEDIAN

7.55.2. Analyzing design hierarchy..
Top module:  \MEDIAN
Removed 0 unused modules.

7.56. Printing statistics.

=== MEDIAN ===

   Number of wires:                 58
   Number of wire bits:            202
   Number of public wires:          58
   Number of public wire bits:     202
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     MISTRAL_ALUT3                   2
     MISTRAL_ALUT4                   7
     MISTRAL_ALUT5                  16
     MISTRAL_ALUT6                   3
     MISTRAL_ALUT_ARITH             13
     MISTRAL_CLKBUF                  1
     MISTRAL_FF                     83
     MISTRAL_IB                     11
     MISTRAL_NOT                     1
     MISTRAL_OB                      9

7.57. Executing CHECK pass (checking for obvious problems).
Checking module MEDIAN...
Found and reported 0 problems.

8. Executing JSON backend.

9. Executing Verilog backend.

9.1. Executing BMUXMAP pass.

9.2. Executing DEMUXMAP pass.
Dumping module `\MEDIAN'.

Warnings: 1 unique messages, 3 total
End of script. Logfile hash: 41a439212d, CPU: user 0.70s system 0.03s, MEM: 33.26 MB peak
Yosys 0.36+40 (git sha1 449e3dbbd, clang 14.0.6 -fPIC -Os)
Time spent: 17% 17x techmap (0 sec), 15% 44x read_verilog (0 sec), ...
